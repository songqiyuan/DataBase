--以大顶堆为例
void Swap(int *a, int *b)
{
	int tmp = *a;
	*a = *b;
	*b = tmp;
}
void KeepHeap(int data[], int i, int length) //保持堆性质
{
	int left = 2 * i+1;
	int right = 2 * (i + 1);
	int largest=i;
	if (data[left] > data[largest] && left < length)
	{
		largest = left;
	}
	if (data[right] > data[largest] && right < length)
	{
		largest = right;
	}
	if (largest == i) return;
	else
	{
		Swap(&data[largest], &data[i]);
		KeepHeap(data, largest,length);
	}
	
}
void BuildHeap(int data[], int length)//建堆
{
	for (int i = length / 2;i >= 0;i--)
	{
		KeepHeap(data, i, length);
	}
	for (int i = 0;i < 9;i++)
	{
		cout << data[i] << '\t';
	}
	cout << endl;

}

void HeapSort(int data[], int length)//排序
{
	BuildHeap(data, length);
	for (int i = length - 1;i > 0;i--)
	{
		Swap(&data[0], &data[i]);
		KeepHeap(data,0, --length);
	}
}
